package com.StudentPortal.Pages;

import static com.framework.elements.Locator.byXPath;

import org.openqa.selenium.By;

import com.framework.elements.BaseLocators;
import com.framework.elements.Button;
import com.framework.elements.Checkbox;
import com.framework.elements.CustomAsserts;
import com.framework.elements.Link;
import com.framework.util.AppendValue;
import com.framework.util.StringHash;
import com.framework.util.TestReportsLog;
import com.relevantcodes.extentreports.LogStatus;

public class StudentGroupPage extends BaseLocators{
		//Login Page Web Elements
	    static String SgName = AppendValue.apendString(); 
		Link Groupvalidation = new Link("Validation Message", By.xpath("//span[text()='The Group records were successfully saved.']"));
		
		static String Group = AppendValue.apendString();
		
		public StudentGroupPage CreateStudentGroup(StringHash data) throws Exception {

			
			wait(2);
			Add.click();
//			waitForPageToLoad();
			wait(20);
			scrollPage(0, -500);
			//Name.clearAndType(data.get("Name").toString());
			Name.clearAndType(SgName);
			wait(2);
			SaveButton1.clickUsingJavaScriptExecutor();
			wait(5);
			Add.clickUsingJavaScriptExecutor();
			wait(5);
			SelectStudent.click();
			wait(3);
			Select.clickUsingJavaScriptExecutor();
			wait(3);
			SaveAndClose1.clickUsingJavaScriptExecutor();
			wait(6);
			CustomAsserts.containsString(Groupvalidation.getText(), data.get("SuccessMessage").toString());
			System.out.println("Group creation is successfull");
			return this;

		}

      public StudentGroupPage StudentGroupCreationPage(StringHash data) throws Exception {
			
    	  Link ValidationMessage = new Link("Validation Message", byXPath("//span[. = 'The Group records were successfully saved.']"));
			//String GroupName = AppendValue.apendString();
			
			Add.click();
			wait(20);
			Name.clearAndType(data.get("GroupName1"));
			wait(2);
			System.out.println("Group Name: "+data.get("GroupName1"));
			TestReportsLog.log(LogStatus.INFO, "Group Name is " +data.get("GroupName1"));
	    	wait(2);
	    	SaveAndClose1.clickUsingJavaScriptExecutor();
			wait(8);
			CustomAsserts.containsString(ValidationMessage.getText(), data.get("SuccessMessage").toString());
			wait(2);
			Add.click();
			wait(20);
			Name.clearAndType(data.get("GroupName2"));
			wait(2);
			System.out.println("Group Name: "+data.get("GroupName2"));
			TestReportsLog.log(LogStatus.INFO, "Group Name is " +data.get("GroupName2"));
	    	wait(2);
	    	SaveAndClose1.clickUsingJavaScriptExecutor();
			wait(8);
			CustomAsserts.containsString(ValidationMessage.getText(), data.get("SuccessMessage").toString());
			wait(2);
			Add.click();
			wait(20);
			Name.clearAndType(data.get("GroupName3"));
			wait(2);
			System.out.println("Group Name: "+data.get("GroupName3"));
			TestReportsLog.log(LogStatus.INFO, "Group Name is " +data.get("GroupName3"));
	    	wait(2);
	    	SaveAndClose1.clickUsingJavaScriptExecutor();
			wait(8);
			CustomAsserts.containsString(ValidationMessage.getText(), data.get("SuccessMessage").toString());
			System.out.println("Group is added successfully");
			return this;
		}

      public StudentGroupPage AddStudentToGroupPage(StringHash data) throws Exception {
    		
    	  Checkbox CheckStudentName1 = new Checkbox(data.get("StudentName1"), byXPath("//input[@aria-label='"+data.get("StudentName1")+"']"));
			Checkbox CheckStudentName2 = new Checkbox(data.get("StudentName2"), byXPath("//input[@aria-label='"+data.get("StudentName2")+"']"));
			Checkbox CheckStudentName3 = new Checkbox(data.get("StudentName3"), byXPath("//input[@aria-label='"+data.get("StudentName3")+"']"));
			Link ClickGroupName1 = new Link(data.get("StudentGroupName1"), byXPath("//a[.='"+data.get("StudentGroupName1")+"']"));
			Link ClickGroupName2 = new Link(data.get("StudentGroupName2"), byXPath("//a[.='"+data.get("StudentGroupName2")+"']"));
			Link ClickGroupName3 = new Link(data.get("StudentGroupName3"), byXPath("//a[.='"+data.get("StudentGroupName3")+"']"));
			Link ValidationMessage = new Link("Validation Message", byXPath("//span[. = 'The Student records were successfully saved.']"));
			

			NameDropDown.click();
			wait(2);
			FilterOptions.click();
			wait(2);
			value.clearAndType(data.get("StudentGroupName1"));
			wait(5);
			FilterButton3.click();
			wait(5);
			ClickGroupName1.click();
			wait(20);
			Add.click();
			wait(15);
			Search.clearAndType(data.get("StudentNumber1"));
			wait(5);
			CheckStudentName1.check();
			wait(2);
			Select.click();
			wait(5);
			scrollPage(0, -500);
			SaveAndClose1.clickUsingJavaScriptExecutor();
			wait(5);
			CustomAsserts.containsString(ValidationMessage.getText(), data.get("SuccessMessage").toString());
			wait(2);
//			GroupFilterDropDown.click();
//			wait(2);
//			GroupFilterButton.click();
			wait(4);
			NameDropDown.click();
			wait(2);
			FilterOptions.click();
			wait(2);
			value.clearAndType(data.get("StudentGroupName2"));
			wait(5);
			FilterButton3.click();
			wait(5);
			ClickGroupName2.click();
			wait(20);
			Add.click();
			wait(15);
			Search.clearAndType(data.get("StudentNumber2"));
			wait(5);
			CheckStudentName2.check();
			wait(2);
			Select.click();
			wait(5);
			scrollPage(0, -500);
			SaveAndClose1.clickUsingJavaScriptExecutor();
			wait(5);
			CustomAsserts.containsString(ValidationMessage.getText(), data.get("SuccessMessage").toString());
			wait(2);
//			GroupFilterDropDown.click();
//			wait(2);
//			GroupFilterButton.click();
			wait(4);
			NameDropDown.click();
			wait(2);
			FilterOptions.click();
			wait(2);
			value.clearAndType(data.get("StudentGroupName3"));
			wait(5);
			FilterButton3.click();
			wait(5);
			ClickGroupName3.click();
			wait(20);
			Add.click();
			wait(15);
			Search.clearAndType(data.get("StudentNumber3"));
			wait(5);
			CheckStudentName3.check();
			wait(2);
			Select.click();
			wait(5);
			scrollPage(0, -500);
			SaveAndClose1.clickUsingJavaScriptExecutor();
			wait(5);
			CustomAsserts.containsString(ValidationMessage.getText(), data.get("SuccessMessage").toString());
			System.out.println("Student is added successfully to the group");
			return this;
		}

      public StudentGroupPage CreateRegistrationLocksPage(StringHash data) throws Exception {

    	  Button Highlight = new Button("Select Group", byXPath("(//tr/td[2])[1]"));
			Link SelectLockType1 = new Link("Lock Type", byXPath("//ul[@id='ruleType_listbox']//span[text()='"+data.get("LockType1")+"']"));
			Link SelectLockType2 = new Link("Lock Type", byXPath("//ul[@id='ruleType_listbox']//span[text()='"+data.get("LockType2")+"']"));
			Link SelectLockType3 = new Link("Lock Type", byXPath("//ul[@id='ruleType_listbox']//span[text()='"+data.get("LockType3")+"']"));
			Link ValidationMessage = new Link("Validation Message", byXPath("//span[. = 'The Registration Lock records were successfully saved.']"));
//			Link ClickGroupName1 = new Link(data.get("StudentGroupName1"), byXPath("//a[.='"+data.get("StudentGroupName1")+"']"));
//			Link ClickGroupName2 = new Link(data.get("StudentGroupName2"), byXPath("//a[.='"+data.get("StudentGroupName2")+"']"));
//			Link ClickGroupName3 = new Link(data.get("StudentGroupName3"), byXPath("//a[.='"+data.get("StudentGroupName3")+"']"));
//			Checkbox CheckStudentName1 = new Checkbox(data.get("StudentName1"), byXPath("//input[@aria-label='"+data.get("StudentName1")+"']"));
//			Checkbox CheckStudentName2 = new Checkbox(data.get("StudentName2"), byXPath("//input[@aria-label='"+data.get("StudentName2")+"']"));
//			Checkbox CheckStudentName3 = new Checkbox(data.get("StudentName3"), byXPath("//input[@aria-label='"+data.get("StudentName3")+"']"));
			
			
//			GroupFilterDropDown.click();
//			wait(2);
//			GroupFilterButton.click();
//			wait(10);
			NameDropDown.click();
			wait(2);
			FilterOptions.click();
			wait(2);
			value.clearAndType(data.get("StudentGroupName1"));
			wait(2);
			FilterButton3.click();
			wait(4);
			Highlight.clickUsingJavaScriptExecutor();
			wait(2);
			RegistrationLocks.click();
			wait(15);
			New.click();
			wait(15);
			TermType.click();
			wait(2);
			SelectTermType.clickUsingJavaScriptExecutor();
			String TermTypeValue = SelectTermType.getAttribute("innerHTML");
			TestReportsLog.log(LogStatus.INFO, "Term Type Value is selected as " +TermTypeValue);
			wait(4);
			LockTypeDropdown.click();
			wait(2);
			SelectLockType1.click();
			wait(5);
			String RegLockType = SelectLockType1.getText();
			System.out.println(RegLockType);
			SaveAndClose1.click();
			wait(5);
			CustomAsserts.containsString(ValidationMessage.getText(), data.get("SuccessMessage").toString());
			wait(2);
			Cancel1.click();
			wait(5);
			//Max reg lock creation
//			GroupFilterDropDown.click();
//			wait(2);
//			GroupFilterButton.click();
			wait(4);
			NameDropDown.click();
			wait(2);
			FilterOptions.click();
			wait(2);
			value.clearAndType(data.get("StudentGroupName2"));
			wait(2);
			FilterButton3.click();
			wait(4);
			Highlight.clickUsingJavaScriptExecutor();
			wait(2);
			RegistrationLocks.click();
			wait(15);
			New.click();
			wait(15);
			TermType.click();
			wait(2);
			SelectTermType.clickUsingJavaScriptExecutor();
			String TermTypeValue1 = SelectTermType.getAttribute("innerHTML");
			TestReportsLog.log(LogStatus.INFO, "Term Type Value is selected as " +TermTypeValue1);
			wait(4);
			LockTypeDropdown.click();
			wait(2);
			SelectLockType2.click();
			wait(3);
			String RegLockType2 = SelectLockType2.getText();
			System.out.println(RegLockType2);
			UnitTypes.click();
			wait(4);
			SelectUnitTypes.clickUsingJavaScriptExecutor();
			String UnitTypesValue = SelectUnitTypes.getAttribute("innerHTML");
			TestReportsLog.log(LogStatus.INFO, "Unit Type Value is selected as " +UnitTypesValue);
			wait(2);
			EnterLimit.clearAndType("1");
			wait(2);
			SaveAndClose1.click();
			wait(5);
			CustomAsserts.containsString(ValidationMessage.getText(), data.get("SuccessMessage").toString());
			wait(2);
			Cancel1.click();
			wait(5);
			//Min reg lock creation
			
//			GroupFilterDropDown.click();
//			wait(2);
//			GroupFilterButton.click();
			wait(4);
			NameDropDown.click();
			wait(2);
			FilterOptions.click();
			wait(2);
			value.clearAndType(data.get("StudentGroupName3"));
			wait(2);
			FilterButton3.click();
			wait(4);
			Highlight.clickUsingJavaScriptExecutor();
			wait(2);
			RegistrationLocks.click();
			wait(15);
			New.click();
			wait(15);
			TermType.click();
			wait(2);
			SelectTermType.clickUsingJavaScriptExecutor();
			String TermTypeValue2 = SelectTermType.getAttribute("innerHTML");
			TestReportsLog.log(LogStatus.INFO, "Term Type Value is selected as " +TermTypeValue2);
			wait(4);
			LockTypeDropdown.click();
			wait(2);
			SelectLockType3.click();
			wait(3);
			String RegLockType3 = SelectLockType3.getText();
			System.out.println(RegLockType3);
			UnitTypes.click();
			wait(4);
			SelectUnitTypes.clickUsingJavaScriptExecutor();
			String UnitTypesValue2 = SelectUnitTypes.getAttribute("innerHTML");
			TestReportsLog.log(LogStatus.INFO, "Unit Type Value is selected as " +UnitTypesValue2);
			wait(2);
			EnterLimit.clearAndType("3");
			wait(4);
			SaveAndClose1.click();
			wait(5);
			CustomAsserts.containsString(ValidationMessage.getText(), data.get("SuccessMessage").toString());
			System.out.println("Locks is created successfully");
			return this;
		}
      
      public StudentGroupPage StudentGroupDeletionPage(StringHash data) throws Exception {

			Button Highlight = new Button("Select Group", byXPath("(//tr/td[2])[1]"));
			Link ValidationMessage = new Link("Validation Message", byXPath("//span[. = 'The Student Group records were successfully deleted.']"));

			GroupFilterDropDown.waitTillElementClickable();
			GroupFilterDropDown.click();
			GroupFilterButton.waitTillElementClickable();
			GroupFilterButton.click();
			wait(2);
			NameDropDown.waitTillElementClickable();
			NameDropDown.click();
			wait(1);
			FilterOptions.waitTillElementClickable();
			FilterOptions.click();
			wait(1);
			value.waitTillElementClickable();
			value.clearAndType(data.get("StudentGroupName1"));
			wait(1);
			FilterButton3.waitTillElementClickable();
			FilterButton3.click();
			wait(1);
			Highlight.waitTillElementClickable();
			Highlight.clickUsingJavaScriptExecutor();
			wait(4);
			DeleteGroup.waitTillElementClickable();
			DeleteGroup.click();
			wait(2);
			ConfirmDelete.waitTillElementClickable();
			ConfirmDelete.click();
			wait(5);
			CustomAsserts.containsString(ValidationMessage.getText(), data.get("SuccessMessage").toString());
			//
			wait(2);
			GroupFilterDropDown.waitTillElementClickable();
			GroupFilterDropDown.click();
			wait(1);
			GroupFilterButton.waitTillElementClickable();
			GroupFilterButton.click();
			wait(2);
			NameDropDown.waitTillElementClickable();
			NameDropDown.click();
			wait(1);
			FilterOptions.waitTillElementClickable();
			FilterOptions.click();
			wait(1);
			value.waitTillElementClickable();
			value.clearAndType(data.get("StudentGroupName2"));
			wait(1);
			FilterButton3.waitTillElementClickable();
			FilterButton3.click();
			wait(1);
			Highlight.waitTillElementClickable();
			Highlight.clickUsingJavaScriptExecutor();
			wait(4);
			DeleteGroup.waitTillElementClickable();
			DeleteGroup.click();
			wait(2);
			ConfirmDelete.waitTillElementClickable();
			ConfirmDelete.click();
			wait(5);
			CustomAsserts.containsString(ValidationMessage.getText(), data.get("SuccessMessage").toString());
			wait(2);
			GroupFilterDropDown.waitTillElementClickable();
			GroupFilterDropDown.click();
			wait(1);
			GroupFilterButton.waitTillElementClickable();
			GroupFilterButton.click();
			wait(2);
			NameDropDown.waitTillElementClickable();
			NameDropDown.click();
			wait(1);
			FilterOptions.waitTillElementClickable();
			FilterOptions.click();
			wait(1);
			value.waitTillElementClickable();
			value.clearAndType(data.get("StudentGroupName3"));
			wait(1);
			FilterButton3.waitTillElementClickable();
			FilterButton3.click();
			wait(1);
			Highlight.waitTillElementClickable();
			Highlight.clickUsingJavaScriptExecutor();
			wait(1);
			DeleteGroup.waitTillElementClickable();
			DeleteGroup.click();
			wait(2);
			ConfirmDelete.waitTillElementClickable();
			ConfirmDelete.click();
			wait(3);
			CustomAsserts.containsString(ValidationMessage.getText(), data.get("SuccessMessage").toString());
			System.out.println("Group is deleted successfully");
			return this;
      }
}
